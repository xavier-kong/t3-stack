import { SignIn, SignInButton, useUser } from "@clerk/nextjs";
import type { NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import Image from "next/image";

import dayjs from "dayjs";
import relaiveTime from "dayjs/plugin/relativeTime";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relaiveTime);

const CreatePostWizard = () => {

  const { user } = useUser();

  console.log(user);

  if (!user) return null;

  return (
  <div className="flex gap-3 w-full">
    <Image src={user.profileImageUrl} alt="Profile image" className="w-14 h-14 rounded-full" width={56} height={56} />
    <input placeholder="Type some emojis!" className="bg-transparent grow outline-none" />
  </div>
  );
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
const { post, author } = props;
 return (
     <div key={post.id} className="p-4 border-b border-slate-400 flex gap-3">
      <Image src={author.profileImageUrl} className="w-14 h-14 rounded-full" alt={`@${author.username}'s profile picture`} width={56} height={56} />
      <div className="flex flex-col">
      <div className="flex text-slate-300 gap-2">
        <span>{`@${author.username}`}</span>
        <span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
      </div>
      <span>
        {post.content}
        </span>
      </div>
    </div>
  )
}

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong</div>;

  return (
   <div className="flex flex-col">
        {[...data, ...data]?.map((fullPost) => (
          <PostView {...fullPost} key={fullPost.post.id} />
               ))}
      </div>
  )

}

const Home: NextPage = () => {

  const { isLoaded: userLoaded, isSignedIn } = useUser();

  api.posts.getAll.useQuery();

  if (!userLoaded) return <div />;


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
      <div className="h-full w-full md: max-w-2xl border-x border-slate-400">
      <div className="border-b border-slate-400 p-4">
        {!isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
        {!!isSignedIn && <CreatePostWizard />}
      </div>
      <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />

      <Feed />
       </div>
     </main>
    </>
  );
};

export default Home;
